-- Table: users
CREATE TABLE users (
                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       username VARCHAR(255) NOT NULL,
                       password VARCHAR(255) NOT NULL,
                       CONSTRAINT UK_users_username UNIQUE (username)
);

-- Table: project
CREATE TABLE project (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         name VARCHAR(255) NOT NULL,
                         created_at TIMESTAMP(6) NOT NULL,
                         ssh_auth_key CLOB,
                         ssh_ip_address VARCHAR(255),
                         username VARCHAR(255),
                         user_id BIGINT NOT NULL,
                         CONSTRAINT FK_project_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Table: private_data
CREATE TABLE private_data (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              content_type VARCHAR(255),
                              created_at TIMESTAMP(6) WITH TIME ZONE,
                              filename VARCHAR(255) NOT NULL,
                              project_id BIGINT NOT NULL,
                              CONSTRAINT UK_private_data_project_filename UNIQUE (project_id, filename),
                              CONSTRAINT FK_private_data_project FOREIGN KEY (project_id) REFERENCES project(id)
);

-- Table: rag_history
CREATE TABLE rag_history (
                             id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             created_at TIMESTAMP(6),
                             title VARCHAR(255),
                             llm_response CLOB,
                             user_query CLOB,
                             project_id BIGINT NOT NULL,
                             CONSTRAINT FK_rag_history_project FOREIGN KEY (project_id) REFERENCES project(id)
);

-- Table: refresh_token
CREATE TABLE refresh_token (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               token VARCHAR(255) NOT NULL,
                               user_id BIGINT NOT NULL,
                               CONSTRAINT UK_refresh_token_token UNIQUE (token),
                               CONSTRAINT UK_refresh_token_user UNIQUE (user_id),
                               CONSTRAINT FK_refresh_token_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Table: user_api_keys
CREATE TABLE user_api_keys (
                               user_id BIGINT NOT NULL,
                               api_key VARCHAR(255) NOT NULL,
                               provider ENUM('CLAUDE', 'GEMINI', 'OPENAI') NOT NULL,
                               PRIMARY KEY (user_id, api_key, provider),
                               CONSTRAINT FK_user_api_keys_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Table: user_roles
CREATE TABLE user_roles (
                            user_id BIGINT NOT NULL,
                            roles ENUM('ADMIN', 'USER'),
                            CONSTRAINT FK_user_roles_user FOREIGN KEY (user_id) REFERENCES users(id)
);
